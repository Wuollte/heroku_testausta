{"version":3,"sources":["services/numbers.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","ErrorNotification","message2","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","statusMessage","setStatusMessage","errorMessage","setErrorMessage","useEffect","console","log","service","numbersToShow","filter","personObject","name","toLowerCase","includes","value","onChange","event","target","onSubmit","preventDefault","number","some","window","confirm","iid","find","map","p","catch","error","setTimeout","concat","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a59137b5.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request=axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request= axios.post(baseUrl,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update =(id,newObject) =>{\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del =(id) =>{\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, del}\r\n","import React, { useEffect, useState } from 'react'\nimport service from './services/numbers'\nimport './index.css'\n\n\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"status\">\n      {message}\n    </div>\n  )\n}\nconst ErrorNotification = ({ message2 }) => {\n  if (message2 === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message2}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName , setNewName] = useState('')\n  const [newNumber,setNewNumber] = useState('')\n  const [newFilter,setNewFilter] = useState('')\n  const [statusMessage, setStatusMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(()=>{\n    console.log('effect')\n    service.getAll()\n    .then(response => {\n      console.log('promise fulfilled')\n      setPersons(response)\n    })\n  },[])\n\n  const addName = (event) => {\n    event.preventDefault()    \n    console.log('button clicked', event.target)\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    if (persons.some(personObject=>personObject.name === newName)){\n      console.log('duplicate name')\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)){\n        const iid=(persons.find(({name}) => name === newName).id)\n        console.log(iid)\n        service.update(iid,personObject).then(response => {setPersons(persons.map(p =>p.id !==iid ? p:response))}).catch(error => {setErrorMessage(`Information for ${newName} has been already deleted`)\n        setStatusMessage(null)\n        setTimeout(()=>{setErrorMessage(null)},2000)\n        setPersons(persons.filter(p=>p.id!==iid))})\n        setStatusMessage(`Number for ${newName} was updated`)\n        setTimeout(()=>{setStatusMessage(null)},2000)\n      }\n      setNewName('')\n      setNewNumber('')\n    }\n    else {\n        service.create(personObject)\n        .then(response => {\n        setPersons(persons.concat(response))\n        setStatusMessage(`${newName} was added`)\n        setTimeout(()=>{setStatusMessage(null)},2000)\n        setNewName('')\n        setNewNumber('') }).catch(error =>{setErrorMessage(error.response.data.error)\n        setTimeout(()=>{setErrorMessage(null)},2000)})\n    }\n  }\n  const deleteNumber=(id,name)=> {\n    if (window.confirm(`Are you sure you want to delete ${name}?`)){\n    service.del(id).catch(error => {setErrorMessage(`${name} is already deleted from the server`)\n    setStatusMessage(null)\n    setTimeout(()=>{setErrorMessage(null)},2000)})\n    \n    setPersons(persons.filter(personObject => personObject.id !== id))\n    setStatusMessage(`${name} was deleted`)\n    setTimeout(()=>{setStatusMessage(null)},2000)\n    }\n  }\n  \n  const handleNameChange = (event)=> {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event)=> {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange =(event)=> {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n  const numbersToShow = newFilter ?\n    persons.filter(personObject => personObject.name.toLowerCase().includes(newFilter.toLowerCase()) === true):\n    persons;\n    \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message ={statusMessage}/>\n      <ErrorNotification message2 ={errorMessage}/>\n      <h2>Filter</h2>\n      <form>\n        <div>\n        <input value={newFilter} onChange={handleFilterChange}/>\n        </div>\n      </form>\n      <h2>Add new</h2>\n      <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <ul>\n      {numbersToShow.map(personObject =>\n      <li key={personObject.id}>\n      {personObject.name}---{personObject.number} <button onClick ={()=> deleteNumber(personObject.id,personObject.name)}>delete</button>\n      </li>\n      )}\n      </ul>\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}